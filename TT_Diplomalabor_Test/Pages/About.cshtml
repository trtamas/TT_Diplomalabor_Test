@page
@model AboutModel
@{
    ViewData["Title"] = "Leírás";
}
<h2>@ViewData["Title"]</h2>
<h3>@Model.Message</h3>

<p style='text-align:justify'>
    A pénzügyi tudatosság egyre fontosabb napjainkban. A reklámok, hitelajánlatok folytonos vásárlásra csábítanak. A túlköltekezés ellen harcban a pénzügyi nyilvántartó programok segítik a fogyasztókat. Ezek a rendszerek követik a kiadásokat, bevételeket, tartozásokat, vagyontárgyakat. A cél egy olyan nyilvántartó program tervezése és megvalósítása, amely alszámlák kezelésére is képes. Az alszámlák segítségével már nem csak követjük a kiadásokat, hanem előre tervezhetjük azokat. Például akkor megyünk étterembe, ha a szórakozásra szánt alszámlán van elegendő keret, illetve a hónap végén ellenőrizhetjük az adott alszámlához tartozó költéseinket. Továbbá, ha egy értékes vagyontárgyat vásárolunk (pl. ház, autó), követhetjük annak értékét, az amortizációt is figyelembe véve. Havi jelentéseket készíthetünk a pénzmozgásokról, és a vagyontrágyaink jelenlegi értékéről, illetve ellenőrizhetjük az egyes alszámláink jelenlegi állapotát, időszaki költéseinket az alszámlákra gyűjtve, a kezdeti terveinkkel összevetve.
    A nyilvántartó program megvalósításához az ASP.NET technológiát alkalmazom, mely technológiát a Microsoft fejlesztette ki arra, hogy gyors és egyszerű eszközt biztosítson a webes alkalmazások könnyű fejlesztéséhez, mely alkalmazásokat a HTML (Hypertext Markup Language) támogató böngészőkkel érhetünk el az Interneten keresztül a http (Hypertext Transfer Protocol) segítségével. Az ASP.NET eredetileg az ASP (Active Service Pages) modellből fejlesztették ki, mely segítségével a fejlesztők alkalmazáskódokat ágyazhattak be a HTML oldalakba. Az IIS (Internet Information Services) webkiszolgáló képes végrehajtani az alkalmazás kódját, és HTML választ képes generálni. A .NET platform megjelenésével a Microsoft frissítette az ASP-keretrendszert és létrehozta az ASP.NET-et. A keretrendszer segítségével képesek vagyunk webűrlapok létrehozására, melyben a kódfájlokat két alapvető részre bontjuk. Az egyik a megjelenési logika a másik a programlogika, mely utóbbiban a .NET keretrendszer által támogatott számos kódnyelven írhatunk. Ilyenek a teljesség igénye nélkül a Visual Basic.NET, C#, JScript, Perl és a Python. Az adatforrás-vezérlő elemek segítségével képesek vagyunk elérni többféle adatforrást, például Microsoft Access, Microsoft SQL Server, SQLite és XML-fájlokat is.
</p>
